package form;
import javax.swing.*;

import helper.Connect;
import helper.Database;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
public class ChangePasswordForm extends JInternalFrame implements ActionListener{

	Connect connect = new Connect();
	
	public ChangePasswordForm(MainForm main){
		addComponent();
		setTitle("Blue Jack Library || Change Password");
		setSize(400,300);
		setLocation((main.getWidth()-this.getWidth())/2,
				(main.getHeight()-this.getHeight())/2);
		setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		setVisible(true);
		setClosable(true);
		setMaximizable(true);
		
	}
	
	public JPanel panelnorth(){
		JLabel lbltitle = new JLabel("Change Password");
		JPanel pnltitle = new JPanel(new FlowLayout());
		pnltitle.add(lbltitle);
		return pnltitle;
	}
	
	public JPasswordField oldpw;
	public JPasswordField newpw;
	public JPasswordField confirmpw;
	
	public JPanel panelcenter(){
		JLabel lbl1 = new JLabel("Old Password");
		JLabel lbl2 = new JLabel("New Password");
		JLabel lbl3 = new JLabel("Confirm Password");
		oldpw = new JPasswordField();
		newpw = new JPasswordField();
		confirmpw = new JPasswordField();
		oldpw.addActionListener(this);
		newpw.addActionListener(this);
		confirmpw.addActionListener(this);
		JPanel pnlform = new JPanel(new GridLayout(3,1,15,15));
		
		pnlform.add(lbl1);
		pnlform.add(oldpw);
		pnlform.add(lbl2);
		pnlform.add(newpw);
		pnlform.add(lbl3);
		pnlform.add(confirmpw);
		return pnlform;
		
	}
	
	public JButton submit;
	
	public JPanel panelsouth(){
		submit = new JButton("Submit");
		JPanel pnl = new JPanel(new FlowLayout());
		submit.addActionListener(this);
		
		pnl.add(submit);
		return pnl;
	}
	
	public void addComponent(){
		add(panelnorth(),BorderLayout.NORTH);
		add(panelcenter(),BorderLayout.CENTER);
		add(panelsouth(),BorderLayout.SOUTH);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if(e.getSource()==submit){
		if(oldpw.getText().equals("")&&newpw.getText().equals("")&&confirmpw.getText().equals("")){
			JOptionPane.showMessageDialog(this,"All Field must be Filled");
		} else if(oldpw.getText().equals("")){
			JOptionPane.showMessageDialog(this,"Old Password must be the same");
		}else if(newpw.getText().equals("")||newpw.getText().length()<=5||newpw.getText().length()>=12){
			JOptionPane.showMessageDialog(this,"New Password length must between 5 and 12 characters");
		}else if(!confirmpw.getText().equals(newpw.getText())){
			JOptionPane.showMessageDialog(this,"Confirm password must be the same with New Password.");
		}else{
			
			String query ="UPDATE user SET UserPass=? WHERE UserID=?";
			
			try{
				PreparedStatement ps = connect.con.prepareStatement(query);
				ps.setString(1,newpw.getText());
				ps.setString(2,Database.UserID );
				ps.execute();
				
			}catch(Exception e1){
				e1.printStackTrace();
			}
			
			JOptionPane.showMessageDialog(this,"Success");
			dispose();
		}
	}
	}
}
